{"version":3,"sources":["Components/ImageGalleryItem/imageGalleryItem.jsx","Components/ImageGallery/imageGallery.jsx","Components/Utils/fetchApi.jsx","Components/Searchbar/Searchbar.jsx","Components/Modal/Modal.Styled.jsx","Components/Modal/Modal.jsx","Components/Loader/Loader.Styled.jsx","Components/Loader/Loader.jsx","Components/Button/Button.styled.jsx","Components/Button/Button.jsx","App.js","index.js"],"names":["ImageGalleryItem","image","onClick","id","tags","webformatURL","className","src","alt","ImageGallery","images","onSelect","selectImg","map","fetchImages","name","page","a","axios","get","response","data","hits","Searchbar","onSubmit","e","preventDefault","target","elements","searchImage","value","toLowerCase","type","autoComplete","autoFocus","placeholder","Overlay","styled","div","ContentModal","modalRoot","document","querySelector","Modal","useEffect","window","addEventListener","handleKeyDown","removeEventListener","code","createPortal","currentTarget","Wrapper","Spinner","color","height","width","timeout","Button","button","LoadMoreButton","App","useState","setImages","setPage","selectedImage","setSelectedImage","setSearchImage","status","setStatus","showModal","setShowModal","length","toast","icon","style","borderRadius","background","duration","error","BtnLoadMore","prev","scrollTo","top","documentElement","scrollHeight","behavior","handleSelectImg","imageURL","showBtn","largeImageURL","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.107c74a2.chunk.js","sourcesContent":["function ImageGalleryItem({ image, onClick }) {\r\n  const { id, tags, webformatURL } = image;\r\n  return (\r\n    <li key={id} className=\"ImageGalleryItem\" onClick={onClick}>\r\n      <img src={webformatURL} alt={tags} className=\"ImageGalleryItem-image\" />\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ImageGalleryItem;\r\n\r\n","import ImageGalleryItem from \"../ImageGalleryItem/imageGalleryItem\";\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction ImageGallery({ images, onSelect, selectImg }) {\r\n  return (\r\n      <ul className=\"ImageGallery\">      \r\n              {images.map((image, id) => (\r\n                <ImageGalleryItem key={id} image={image}\r\n                  onClick ={()=> onSelect(image)}\r\n               />\r\n            ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default ImageGallery;\r\n\r\n ImageGallery.propTypes = {\r\n    images: PropTypes.arrayOf(PropTypes.object),\r\n    onSelect: PropTypes.func,\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const fetchImages = async (name, page) => {\r\n  const URL = \"https://pixabay.com/api\";\r\n  const API_KEY = \"22635337-a2d7cfd18b30a4b0e9b9bd466\";\r\n\r\n  const response = await axios.get(\r\n    `${URL}/?q=${name}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`\r\n  );\r\n  return response.data.hits;\r\n};\r\n\r\n\r\n\r\n\r\n\r\n// 22635337-a2d7cfd18b30a4b0e9b9bd466\r\n// https://pixabay.com/api/\r\n","export const Searchbar = ({ onSubmit }) => {\r\n    const handleSearch = (e) => {\r\n        e.preventDefault()\r\n        onSubmit(e.target.elements.searchImage.value.toLowerCase())\r\n    }\r\n\r\n    return (\r\n        <header className=\"Searchbar\">\r\n            <form className=\"SearchForm\" onSubmit={handleSearch}>\r\n              <button type=\"submit\" className=\"SearchForm-button\">\r\n                <span className=\"SearchForm-button-label\">Search</span>\r\n              </button>\r\n\r\n              <input\r\n                className=\"SearchForm-input\"\r\n                type=\"text\"\r\n                name='searchImage'\r\n                autoComplete=\"off\"\r\n                autoFocus\r\n                placeholder=\"Search images and photos\"\r\n              />\r\n            </form>\r\n          </header>\r\n    )\r\n};\r\n\r\n\r\n\r\n\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Overlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(4 4 4 / 59%);\r\n  z-index: 10;\r\n  opacity: 1;\r\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1),\r\n    visibility 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n`;\r\n\r\nexport const ContentModal = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  max-width: 1200px;\r\n  max-height: 100vh;\r\n  width: 100%;\r\n  /* padding: 40px; */\r\n  background-color: #ffffff;\r\n  /* overflow-y: auto; */\r\n  transform: translate(-50%, -50%) scale(1);\r\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n`;","import { useEffect } from 'react';\r\nimport { Overlay, ContentModal } from './Modal.Styled';\r\nimport { createPortal } from 'react-dom';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default function Modal ({src, alt, onSelect}) {\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => {\r\n       window.removeEventListener('keydown', handleKeyDown);\r\n    }\r\n  })\r\n\r\n  const handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      onSelect();\r\n    }\r\n  };\r\n\r\n  const handleBackDropClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      onSelect();\r\n    }\r\n  };\r\n  return createPortal(\r\n    <>\r\n      <Overlay onClick={handleBackDropClick}>\r\n        <ContentModal>\r\n          <img src={src} alt={alt} />\r\n        </ContentModal>\r\n      </Overlay>\r\n    </>,\r\n    modalRoot,\r\n  );\r\n}\r\n\r\n\r\n// class Modal extends Component {\r\n//   componentDidMount() {\r\n//     window.addEventListener('keydown', this.handleKeyDown);\r\n//   }\r\n\r\n//   componentWillUnmount() {\r\n//     window.removeEventListener('keydown', this.handleKeyDown);\r\n//   }\r\n\r\n//   handleKeyDown = e => {\r\n//     if (e.code === 'Escape') {\r\n//       this.props.onSelect();\r\n//     }\r\n//   };\r\n\r\n//   handleBackDropClick = e => {\r\n//     if (e.currentTarget === e.target) {\r\n//       this.props.onSelect();\r\n//     }\r\n//   };\r\n\r\n//   render() {\r\n//     const { src, alt} = this.props;\r\n//     const { handleBackDropClick } = this;\r\n//     return createPortal(\r\n//       <>\r\n//         <Overlay onClick={handleBackDropClick}>\r\n//           <ContentModal>\r\n//             <img src={src} alt={alt} />\r\n//           </ContentModal>\r\n//         </Overlay>\r\n//       </>,\r\n//       modalRoot,\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default Modal;","import styled from '@emotion/styled';\r\n\r\nexport const Wrapper = styled.div`\r\n  position: fixed;\r\n  top: 96vh;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n`;","import Loader from 'react-loader-spinner';\r\nimport { Wrapper } from './Loader.Styled';\r\n\r\nfunction Spinner() {\r\n    return (\r\n    <Wrapper>\r\n        <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} timeout={3000}/>\r\n    </Wrapper>\r\n    );\r\n}\r\n\r\nexport default Spinner;","import styled from '@emotion/styled';\r\n\r\nexport const Button = styled.button`\r\n  display: block;\r\n  margin: 20px auto 20px auto;\r\n  padding: 8px 16px;\r\n  border-radius: 2px;\r\n  background-color: #3f51b5;\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  text-align: center;\r\n  display: inline-block;\r\n  color: #fff;\r\n  border: 0;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  font-family: inherit;\r\n  font-size: 18px;\r\n  line-height: 24px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  min-width: 180px;\r\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\r\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n\r\n    &:hover,\r\n    &:focus {\r\n    background-color: #303f9f;\r\n    }\r\n    `;","import { Button } from './Button.styled';\r\n\r\nfunction LoadMoreButton({ onClick }) {\r\n    return (\r\n        <>\r\n            <Button type=\"button\" onClick={onClick}>Load More</Button>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LoadMoreButton;","import { useState, useEffect } from 'react';\nimport './App.css';\nimport ImageGallery from './Components/ImageGallery/imageGallery.jsx';\nimport { fetchImages } from './Components/Utils/fetchApi.jsx';\nimport { Searchbar } from './Components/Searchbar/Searchbar.jsx';\nimport Modal from './Components/Modal/Modal.jsx';\nimport Spinner from './Components/Loader/Loader.jsx';\nimport LoadMoreButton from './Components/Button/Button.jsx';\nimport toast, { Toaster } from 'react-hot-toast';\n\nexport default function App() {\n  const [images, setImages] = useState([]);\n  const [page, setPage] = useState(1);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [searchImage, setSearchImage] = useState('');\n  const [status, setStatus] = useState('idle');\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    if (!searchImage) return;\n\n    (async () => {\n      try {\n        setStatus('pending');\n        setSelectedImage('');\n\n        const images = await fetchImages(searchImage);\n        if (images.length === 0) {\n          toast(`Here is no images to show`, {\n            icon: '👏',\n            style: {\n              borderRadius: '10px',\n              background: '#333',\n              color: '#fff',\n              duration: 4000,\n            },\n          });\n        }\n        setStatus('resolved');\n        setImages(images);\n      } catch (error) {\n        toast.error('Error');\n      }\n    })();\n  }, [searchImage]);\n\n  const BtnLoadMore = async () => {\n    setPage(prev => prev + 1);\n    const images = await fetchImages(searchImage, page + 1);\n    setImages(prev => [...prev, ...images]);\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  const handleSubmit = searchImage => {\n    setImages([]);\n    setSearchImage(searchImage);\n    setPage(1);\n  };\n\n  const handleSelectImg = imageURL => {\n    setShowModal(true);\n    setSelectedImage(imageURL);\n  };\n\n  const showBtn = images.length >= 1;\n\n  return (\n    <>\n      <Searchbar onSubmit={handleSubmit} />\n      {status === 'pending' && <Spinner />}\n      <ImageGallery images={images} onSelect={handleSelectImg} />\n      {showBtn && <LoadMoreButton onClick={BtnLoadMore} />}\n      {showModal && (\n        <Modal\n          src={selectedImage.largeImageURL}\n          alt={selectedImage.tags}\n          onSelect={handleSelectImg}\n        />\n      )}\n      <Toaster />\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}